const App = () => {
  const courses = [
    {
      name: 'Half Stack application development',
      id: 1,
      parts: [
        {
          name: 'Fundamentals of React',
          exercises: 10,
          id: 1
        },
        {
          name: 'Using props to pass data',
          exercises: 7,
          id: 2
        },
        {
          name: 'State of a component',
          exercises: 14,
          id: 3
        },
        {
          name: 'Redux',
          exercises: 11,
          id: 4
        }
      ]
    }, 
    {
      name: 'Node.js',
      id: 2,
      parts: [
        {
          name: 'Routing',
          exercises: 3,
          id: 1
        },
        {
          name: 'Middlewares',
          exercises: 7,
          id: 2
        }
      ]
    }
  ]
  
  const FirstCourses = () => {
		return (
			courses[0].parts.map(part => <p key = {part.id}>{part.name}: {part.exercises}</p>)
		)
	}
  const SecondCourses = () => {
		return (
			courses[1].parts.map(part => <p key = {part.id}>{part.name}: {part.exercises}</p>)
		)
	}

const Courses = ({courses}) =>{
  
  const lista1 = [];
  const lista2 = [];
	const reducer = (edellinen, nykyinen) => {
		return (
			edellinen + nykyinen
		)
	}
	
	for (let i = 0; i< courses[0].parts.length; i++) {
		lista1.push(courses[0].parts[i].exercises)
	}
  for (let i = 0; i< courses[1].parts.length; i++) {
		lista2.push(courses[1].parts[i].exercises)
	}
	
			return (
			<div>
				<h3>{courses[0].name}</h3>
				<FirstCourses/>
				<p><b> total of {lista1.reduce(reducer)} exercises </b></p>
				
				<br />
				
				<h3>{courses[1].name}</h3>
				<SecondCourses />
				<p><b> total of {lista2.reduce(reducer)} exercises </b></p>
			</div>
		)
  }


    return (
        <div>
        <h1>Web Development Curriculum</h1>
        <Courses courses={courses} />
        </div>
    )
}
export default App
