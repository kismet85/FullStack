import { useState } from 'react'

const Filter = (props) => {
	return (
		<div>
          Filter name's in phonebook: <input value = {props.value} onChange = {props.onChange} />
          <br />
    </div>    
	)
}

const PersonName = (props) => {
	return (
		<div>
          Name: <input value = {props.value} onChange = {props.onChange} />
          <br />
    </div>    
	)
}

const PersonNumber = (props) => {
	return (
		<div>
          Number: <input value = {props.value} onChange = {props.onChange} />
          <br />
    </div>    
	)
}

const Content = (props) => props.personsToShow.map(person => <p key = {person.id}>{person.name}: {person.number}</p>)

const App = () => {
  const [persons, setPersons] = useState([
    { 
      id: 1,
      name: 'Arto Hellas',
      number: 12345,
    },
    { 
      id: 2,
      name: 'Erto Hallas',
      number: 1234,
    },
  ]) 
  const [newName, setNewName] = useState('')
  const [newNumber, setNewNumber] = useState('')
  const [searchName, setSearchName] = useState('')
  const [showAllPersons, setShowAll] = useState(true)

  const addPerson = (event) => {
    event.preventDefault()
    const personObject = {
      id: persons.length + 1,
      name: newName,
      number: newNumber
    }

    if (newName === ''){
      alert('No name entered, please write a name')
    }
    else if (persons.some(person => person.name === personObject.name)) {
      alert(`${newName} is already added to phonebook`)
    } 
    else {
      setPersons(persons.concat(personObject))
      setNewName('')
      setNewNumber('')
    }
  }

  const showPerson = (query) => {
    const filterPersons = persons.filter(person => person.name.toLowerCase().split(" ").join("").indexOf(query.toLowerCase()) !== -1)
    return filterPersons
    }   
    
    
    const personsToShow = showAllPersons
      ? showPerson(searchName)
      : persons

  const handleNewNameChange = (event) => {setNewName(event.target.value)}
  const handleNumberChange = (event) => {setNewNumber(event.target.value)}
  const handleSearchChange = (event) => {setSearchName(event.target.value)}

  return (

    <div>
      <h2>Phonebook</h2>
        <Filter value={searchName} onChange={handleSearchChange} />
        <button onClick={() => setShowAll(!showAllPersons)}>Show/Hide Search</button>
      <h2>Add a new person</h2>
      <form onSubmit={addPerson}>
        <div>
          <PersonName value={newName} onChange={handleNewNameChange}/>
          <br />
          <PersonNumber value={newNumber} onChange={handleNumberChange}/>
        </div>
        <div>
          <button type="submit">Add</button>
        </div>
      </form>
      <h2>Numbers</h2>
      <div>
      <Content personsToShow = {personsToShow} />
      </div>
    </div>
  )

}

export default App
